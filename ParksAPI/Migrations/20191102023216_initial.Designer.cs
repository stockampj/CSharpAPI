// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParksAPI.Models;

namespace ProjectAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191102023216_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("ParksAPI.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivityName");

                    b.HasKey("ActivityId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("ParksAPI.Models.Park", b =>
                {
                    b.Property<int>("ParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<string>("ParkName");

                    b.HasKey("ParkId");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("ParksAPI.Models.ParkActivity", b =>
                {
                    b.Property<int>("ParkActivityId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActivityId");

                    b.Property<int>("ParkId");

                    b.HasKey("ParkActivityId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ParkId");

                    b.ToTable("ParkActivities");
                });

            modelBuilder.Entity("ParksAPI.Models.Trail", b =>
                {
                    b.Property<int>("TrailId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChallengeRating");

                    b.Property<double>("Length");

                    b.Property<int>("ParkId");

                    b.Property<string>("TrailName");

                    b.HasKey("TrailId");

                    b.HasIndex("ParkId");

                    b.ToTable("Trails");
                });

            modelBuilder.Entity("ParksAPI.Models.ParkActivity", b =>
                {
                    b.HasOne("ParksAPI.Models.Activity", "Activity")
                        .WithMany("Parks")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ParksAPI.Models.Park", "Park")
                        .WithMany("Activities")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ParksAPI.Models.Trail", b =>
                {
                    b.HasOne("ParksAPI.Models.Park")
                        .WithMany("Trails")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
